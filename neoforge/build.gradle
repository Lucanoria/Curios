plugins {
    id 'multiloader-loader'
    id 'net.neoforged.gradle.userdev' version '7.0.142'
    id 'com.modrinth.minotaur' version '2.+'
    id 'net.darkhax.curseforgegradle' version '1.+'
    id 'maven-publish'
}

// Automatically enable neoforge AccessTransformers if the file exists
// This location is hardcoded in FML and can not be changed.
// https://github.com/neoforged/FancyModLoader/blob/a952595eaaddd571fbc53f43847680b00894e0c1/loader/src/main/java/net/neoforged/fml/loading/moddiscovery/ModFile.java#L118
def at = file('src/main/resources/META-INF/accesstransformer.cfg')
if (at.exists()) {
    minecraft.accessTransformers.file at
}

sourceSets {
    test {
        runs {
            modIdentifier 'curiostest'
        }
    }
}

runs {
    configureEach {
        modSource project.sourceSets.main
        modSource project.sourceSets.test
    }
    client {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
    }
    server {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        programArgument '--nogui'
    }

    gameTestServer {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
    }

    data {
        programArguments.addAll '--mod', 'curiostest', '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        // location of the maven that hosts JEI files since January 2023
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
}

dependencies {
    implementation "net.neoforged:neoforge:${neoforge_version}"

    compileOnly "mezz.jei:jei-1.20.4-common-api:${jei_version}"
    compileOnly "mezz.jei:jei-1.20.4-forge-api:${jei_version}"
}

publishing {
    repositories {
        maven {
            name = "octo"
            url = "https://maven.octo-studios.com/releases"
            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
    publications {
        maven(MavenPublication) {
            groupId = group
            artifactId = "curios-neoforge"
            version = version
            from components.java
        }
    }
}